user jeremy users;

events {}

http {
        include /usr/local/nginx/conf/mime.types;

	error_log /home/jeremy/gitting/jpi.jflei.com/error.log debug;
	access_log /home/jeremy/gitting/jpi.jflei.com/access.log;
	server {
		# jflei.com is hosted by github pages, and unfortunately, we can't
		# point 2 different domains.
		# As suggested on
		# https://help.github.com/articles/setting-up-a-custom-domain-with-pages,
		# I've found a "a service that can redirect the other domains
		# to your Pages domain."
		server_name tnoodle.tk;
		rewrite ^ http://www.jflei.com$request_uri? permanent;
	}
	server {
		listen 80;
		server_name ~^(?<domain>.+)$;
		proxy_read_timeout 120;

		satisfy any;
		allow 192.168.1.0/24;
		deny all;
		auth_basic "...";
		auth_basic_user_file /home/jeremy/gitting/jpi.jflei.com/htpasswd;
		
		location / {
			root /home/jeremy/gitting/jpi.jflei.com/webroot;
			index index.html;
		}
		# For some reason, transmission isn't happy if you access it with a trailing slash
		rewrite ^/transmission/$ /transmission? permanent;
		location /transmission {
			proxy_pass          http://127.0.0.1:9091;
			proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
			proxy_redirect      off;
			proxy_buffering     off;
			proxy_set_header    Host            $host;
			proxy_set_header    X-Real-IP       $remote_addr;
		}
		location /gui/ {
			proxy_pass              http://localhost:8888/gui/;
		}
		location /xbmc {
			rewrite ^/xbmc$ /xbmc/ permanent;
			rewrite ^/xbmc(/.*)?$ $1 break;
			proxy_pass http://127.0.0.1:8080/;
		}

		location /tv {
			proxy_pass http://localhost:8043;
		}

                location /gatekeeper {
			# gatekeeper does its own authentication
			allow all;
			# Rewrite all http requests to /gatekeeper to https.
                	rewrite ^ https://$domain$request_uri? permanent;
                }
	}

        server {
		listen 443;
		server_name ~^(?<domain>.+)$;

                ssl on;
                ssl_certificate server.crt;
                ssl_certificate_key server.key;

		location /gatekeeper/ {
			proxy_pass https://127.0.0.1:8042/;

                        # This is a hack to make absolute urls work in spite of the
                        # reverse http proxying that nginx does.
                        sub_filter_types text/xml;
                        sub_filter 'https://127.0.0.1:8042' 'https://$domain/gatekeeper';
                        sub_filter_once off;
		}
	}
}
